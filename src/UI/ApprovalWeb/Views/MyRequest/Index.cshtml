@model BuildingBlocks.Core.Pagination.IPage<ApprovalRequestViewModel>

<!-- Page Title -->
<h2 class="text-center my-4 fs-4">Approval Request List</h2>

<!-- Button to Submit a New Request -->
<div class="d-flex justify-content-end mb-4">
    <form method="get" class="d-flex align-items-center me-2" style="gap: 0.5rem;">
        <input type="text" name="requestTitle" class="form-control form-control-sm" placeholder="Request Title" value="@(Context.Request.Query["requestTitle"])" />
        @* <input type="text" name="userName" class="form-control form-control-sm" placeholder="User" value="@(Context.Request.Query["user"])" /> *@
        <button type="submit" class="btn btn-outline-secondary btn-sm">Filter</button>
    </form>
    <a href="/MyRequest/Create2" class="btn btn-primary shadow-sm">+ Submit New Request</a>
</div>

<div class="container-fluid">
    @{
        var searchTerm = Context.Request.Query["requestTitle"].ToString();
        string HighlightText(string text, string term)
        {
            if (string.IsNullOrWhiteSpace(term) || string.IsNullOrWhiteSpace(text))
                return text;

            var regex = new System.Text.RegularExpressions.Regex(System.Text.RegularExpressions.Regex.Escape(term), System.Text.RegularExpressions.RegexOptions.IgnoreCase);
            return regex.Replace(text, match => $"<span style=\"background-color: yellow\">{match.Value}</span>");
        }
    }

    <!-- 모바일 카드 뷰 -->
    <div class="card shadow-sm d-block d-md-none">
        <div class="card-body p-0">
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 p-3">
                @if (Model != null && Model.Any())
                {
                    foreach (var item in Model)
                    {
                        <div class="col">
                            <div class="card shadow-sm h-100">
                                <div class="card-header bg-primary text-white fw-bold">
                                    <a href="/MyRequest/Details/@item.ApprovalId" class="text-white text-decoration-none">
                                        @Html.Raw(HighlightText(item.RequestTitle, searchTerm))
                                    </a>
                                </div>
                                <div class="card-body">
                                    <div class="row mb-2">
                                        <div class="col-5 text-muted">Approver:</div>
                                        <div class="col-7">@item.CurrentApproverName</div>
                                    </div>
                                    <div class="row mb-2">
                                        <div class="col-5 text-muted">Employee No:</div>
                                        <div class="col-7">@item.CurrentApproverEmployeeNumber</div>
                                    </div>
                                    <div class="row mb-2">
                                        <div class="col-5 text-muted">Status:</div>
                                        <div class="col-7">@item.CurrentActionStatus</div>
                                    </div>
                                    <div class="row mb-2">
                                        <div class="col-5 text-muted">Created:</div>
                                        <div class="col-7">@item.RequestedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</div>
                                    </div>
                                    <div class="row mb-2">
                                        <div class="col-5 text-muted">Approved:</div>
                                        <div class="col-7">
                                            @(item.RespondedAt?.ToLocalTime().ToString("yyyy-MM-dd HH:mm") ?? "—")
                                        </div>
                                    </div>
                                    <div class="row mb-2">
                                        <div class="col-5 text-muted">Final Status:</div>
                                        <div class="col-7">
                                            <span class="badge @(item.Status switch {
                                                "Approved" => "bg-success",
                                                "Rejected" => "bg-danger",
                                                _ => "bg-warning text-dark"
                                            })">
                                                @item.Status
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-footer text-center">
                                    <a href="/MyRequest/Details/@item.ApprovalId" class="btn btn-outline-info btn-sm">View Details</a>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12">
                        <div class="alert alert-warning text-center">No approval requests found.</div>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- 데스크탑 테이블 뷰 -->
    <div class="table-responsive d-none d-md-block">
        @if (Model != null && Model.Any())
        {
            <table class="table table-bordered table-hover">
                <thead class="table-primary text-center">
                    <tr>
                        <th style="min-width: 250px;">Title</th>
                        <th style="min-width: 100px; max-width: 130px;">Approver</th>
                        <th style="min-width: 90px; max-width: 110px;">Employee No</th>
                        <th style="min-width: 100px; max-width: 130px;">Status</th>
                        <th style="min-width: 130px; max-width: 160px;">Created</th>
                        <th style="min-width: 130px; max-width: 160px;">Approved</th>
                        <th style="min-width: 100px; max-width: 130px;">Final Status</th>
                        <th style="min-width: 90px; max-width: 110px;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <a href="/MyRequest/Details/@item.ApprovalId" class="text-decoration-none text-primary fw-bold" style="vertical-align: middle; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 250px;">
                                    @Html.Raw(HighlightText(item.RequestTitle, searchTerm))
                                </a>
                            </td>
                            <td style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap; vertical-align: middle; text-align: center;">@item.CurrentApproverName</td>
                            <td style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap; vertical-align: middle; text-align: center;">@item.CurrentApproverEmployeeNumber</td>
                            <td style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap; vertical-align: middle; text-align: center;">@item.CurrentActionStatus</td>
                            <td style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap; vertical-align: middle; text-align: center;">@item.RequestedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</td>
                            <td style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap; vertical-align: middle; text-align: center;">@(item.RespondedAt?.ToLocalTime().ToString("yyyy-MM-dd HH:mm") ?? "—")</td>
                            <td style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap; vertical-align: middle; text-align: center;">
                                <span class="badge @(item.Status switch {
                                    "Approved" => "bg-success",
                                    "Rejected" => "bg-danger",
                                    _ => "bg-warning text-dark"
                                })">@item.Status</span>
                            </td>
                            <td style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap; vertical-align: middle; text-align: center;">
                                <a href="/MyRequest/Details/@item.ApprovalId" class="btn btn-outline-info btn-sm">View</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="alert alert-warning text-center">No approval requests found.</div>
        }
    </div>
</div>
@{
    int totalPages = 0;
    bool hasPages = ViewBag.TotalPage != null && int.TryParse(ViewBag.TotalPage.ToString(), out totalPages) && totalPages > 1;
}
@if (hasPages)
{
    <nav aria-label="Page navigation" class="mt-3">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(ViewBag.CurrentPage != null && ViewBag.CurrentPage.ToString() == i.ToString() ? "active" : "")">
                    <a class="page-link" href="?page=@i@(Context.Request.Query["requestTitle"].Count > 0 ? $"&requestTitle={Context.Request.Query["requestTitle"]}" : "")">@i</a>
                </li>
            }
        </ul>
    </nav>
}
